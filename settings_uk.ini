;Parameters fed to multiple subroutines
[global]
;location of gadm database
gadm_location = gadm.db
;location of country database
country_location = country.db
;The area to look in (assumes its in GADM).
;Special cases England and Wales, United States, United States+ (draws state boundaries), London+ (draws boroughs)
meta_location = Devon
;accuracy of polygon, set negative to use full polygon (higher tolerance can speed things up quite a bit...)
tolerance = 0.01
;Grid or poly database. Will return error if both true or both false.
use_grid = True
grid_size = 30
use_counties = False
county_location = 
;Use region from 'map_levelX_commY.txt. Leave blank to do entire meta_location
level = 
comm = 
;Use this as target file, leave blank to default to level and comm
map_filename = 
;stats file. This gets overwritten! Leave blank to default to stats.out
stats_filename = 
;image output type; 
img_type = png
;;input/output file directory. All results are written here and expected to be in here! Default is execution directory
iodir = 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;In the following the default filename has a base name e.g. "boxes"
;;if level is blank appends ".out"
;;if level and comm are not blank appends "_levelX_commY.out"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;parameters of the tweet extraction
[extract]
;specify the full path!
input_file = ../outputfile.json
;If output file exists, don't regenerate
regen = False
;use default output file name
default_filenames = True
;specify input and output file names
output_file = 

;parameters of the place extraction
[split]
;largest allowed place box
max_place = 5
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
output_file = 

;parameters of the locate
[locate]
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
output_file = 
index_file = 
tweetcount_file = 




;parameters of the network building
[network]
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
box_file = 
con_file = 
sen_file = 
graph_file = 

;parameters for special distance null model community finding
[null]
;should I do the null model stuff
runprop = False
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;bin distances to 5km
bindist = 0
;specify input and output file names
csv_file = 
null_file = 
label_file = 
graph_file = 
communities_file = 
communities_plot_file = 


;parameters of the community finding
[findcom]
;If output file exists, don't regenerate
regen = False
;number of neighbours for editing communities
nbrs = 4
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
find_file = 
refine_file = 
edited_file = 

;parameters of the community finding
[drawcom]
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;alphas
node_alphas = /data/Tweets/UK/node_degreecentrality.txt
;specify input and output file names
find_file = 
refine_file = 
edited_file = 
output_find_file = 
output_refined_file = 
output_edited_file = 

;parameters of the community mapping
[mapcom]
;If output file exists, don't regenerate
regen = False
;exclude isolated tiles
drop_isolates = False
;Only use largest contiguous area
use_largest = False
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
output_base = 

;parameters of the community mapping
[networkplot]
;If output file exists, don't regenerate
regen = False
;use default input and output file names
default_filenames = True
;specify input and output file names
input_file = 
output_file = 
;max_node: max size of node in fig
;node_factor: scale self connections
;min_self: include nodes with this many self connections; 
;min_connections: show edges with this many connections
;edge_w: plot edge width
max_node = 400 
node_factor = 0.01
min_self = 0
min_connection = 100
edge_w = 0.01
